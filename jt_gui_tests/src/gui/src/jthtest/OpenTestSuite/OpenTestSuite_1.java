/*
 * $Id$
 *
 * Copyright (c) 2009, 2010, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package jthtest.OpenTestSuite;

import java.io.File;
import jthtest.Test;
import jthtest.Tools;
import jthtest.tools.JTFrame;
import jthtest.tools.WorkDirectory;
import org.netbeans.jemmy.JemmyException;
import org.netbeans.jemmy.operators.JTabbedPaneOperator;
import org.netbeans.jemmy.util.NameComponentChooser;

/**
 *
 * @author linfar
 */
public class OpenTestSuite_1 extends Test {

    public void testImpl() throws Exception {
        mainFrame = new JTFrame(true);
        mainFrame.openDefaultTestSuite();
        File temp = mainFrame.createWorkDirectoryInTemp();
        addUsedFile(temp);
        mainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);
        mainFrame.runTests().waitForDone();

        mainFrame.closeCurrentTool();

        WorkDirectory wd = mainFrame.getWorkDirectory();
        wd.openWorkDirectory(temp);
        wd.waitForStatus(WorkDirectory.WDStatus.SOME_FAILED);
        if (!new JTabbedPaneOperator(mainFrame.getJFrameOperator(), new NameComponentChooser("br.tabs")).isEnabledAt(2)) {
            throw new JemmyException("'Passed' tab is inactive");
        }

/*        openTestSuite(mainFrame);
        createWorkDirInTemp(mainFrame);
        ConfigTools.openConfigFile(ConfigTools.openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);
        startTests(mainFrame);
        new JButtonOperator(new JDialogOperator("View Filter Info"), "OK").push();
        waitForWDLoading(mainFrame, WDLoadingResult.SOME_FAILED);

        new JMenuOperator(mainFrame, "File").pushMenu(new String[]{"File", "Close"});

        CreateWorkdir.createWorkDir(CreateWorkdir.openWorkDirectoryOpening(mainFrame), TEMP_PATH, TEMP_WD_NAME, false);
//    openWorkDirectory(mainFrame, TEMP_PATH + TEMP_WD);

        waitForWDLoading(mainFrame, WDLoadingResult.SOME_FAILED);
        if (!new JTabbedPaneOperator(mainFrame, new NameComponentChooser("br.tabs")).isEnabledAt(2)) {
            throw new JemmyException("'Passed' tab is inactive");
        }*/
    }
}
