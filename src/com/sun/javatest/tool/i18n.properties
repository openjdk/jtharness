#
# $Id$
#
#
# Copyright (c) 2001, 2016, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

cc.cantCreateConfig=cannot create default configuration for test suite "{0}": {1}
cc.cantCreateWD=cannot create work directory "{0}"
cc.cantFindConfig=cannot find configuration "{0}"
cc.cantFindTS=cannot find test suite "{0}"{1,choice,0#|1# specified in configuration {2}}
cc.cantInitConfig=cannot initialize configuration: {0}
cc.cantOpenConfig=cannot open configuration "{0}": {1}
cc.cantOpenTS=cannot open test suite{0}{1,choice,0#|1# specified in configuration {2}}: {3}
cc.cantReadConfig=cannot read configuration "{0}": {1}
cc.confAlreadySet=Cannot set the configuration from file "{0}"; it has already been set from the file "{1}".
cc.confAlreadySetDefault=Cannot set the configuration from file "{0}"; it has already set to the default configuration for your test suite because of earlier options or commands.
cc.confTestSuiteMismatch=Configuration cannot be used with the test suite that has already been specified ({0}
cc.confWorkDirMismatch=Configuration cannot be used with the work directory that has already been specified ({0})
cc.errorInDefault={0}
#cc.noConfig=no configuration information given
cc.noTestSuite=no test suite specified
cc.noTestSuiteInConfigFile=no test suite specified
cc.tsAlreadySet=Test suite already set to "{0}"
cc.verbose.desc=trace commands as they are executed
cc.verbose.name=commands
cc.wdAlreadySet=Work directory already set to "{0}"
cc.wdTestSuiteMismatch=Work directory "{0}" cannot be used with the test suite that has already been specified: {1}

cmdp.badCmd=unknown command: "{0}"
cmdp.badOpt=unknown option: "{0}"
cmdp.badReadCmd=bad "read" command
cmdp.badReadOpt=bad "read" option
cmdp.badFileOpt=bad file argument: {0}
cmdp.cantDecode=cannot decode argument "{0}": {1}
cmdp.cantFindFile=cannot find file "{0}"
cmdp.cantOpenFile=cannot open file "{0}" ({1})
cmdp.errorInFile={0}:{1}: {2}
cmdp.errorInString={0}
cmdp.excessArgs={0}: too many arguments

cnfg.badWorkdir=The work directory {0} may exist, but is is either partially or fully unreadable/unwritable.  Continuing with no work directory.
#cnfg.cantFindFile=cannot find file "{0}"
#cnfg.cantOpenConfig=cannot open configuration file "{0}".\n{1}
#cnfg.cantReadFile=cannot read file "{0}": {1}
cnfg.cantSetParameters=an error occurred while setting the parameters ({0})
cnfg.conc.badRange=bad value for "concurrency" command ({0}); it should be between {1} and {2}
cnfg.conc.badValue=bad value for "concurrency" command ({0})
cnfg.conc.missingArg=no argument given
cnfg.conc.notEditable=concurrency value not editable for this test suite
cnfg.concurrency.desc=Set the maximum number of tests that can be run at once.
cnfg.concurrency.name=-concurrency <value>
cnfg.conf.missingArg=no argument given
cnfg.config.desc=Specify a .jti file containing the configuration used to execute tests.
cnfg.config.name=-config <file>
cnfg.desc=Options for setting up and changing a configuration
cnfg.env.desc=Set the name of the environment to be used.
cnfg.env.missingArg=no argument given
cnfg.env.name=-env <name>
cnfg.env.notEditable=this option is not applicable for this testsuite
cnfg.envFiles.noFiles=no environment files specified
cnfg.envFiles.notEditable=this option is not applicable for this testsuite
cnfg.envfile.desc=Specify a .jte file containing the environment used to execute tests. 
cnfg.envfile.name=-envFile <file>
cnfg.envfiles.desc=Specify .jte files containing the environment used to execute tests. 
cnfg.envfiles.name=-envFiles <file>...
cnfg.excl.noFiles=no exclude list files specified
cnfg.excl.notEditable=this option is not applicable for this testsuite
cnfg.excludeList.desc=Specify .jtx files containing lists of tests to be excluded.
cnfg.excludeList.name=-excludeList <file>...
cnfg.keywords.desc=Specify a keyword filter to be applied when tests are executed.
cnfg.keywords.missingArg=argument missing
cnfg.keywords.name=-keywords <expr>
cnfg.keywords.notEditable=this option is not applicable for this testsuite
cnfg.kfl.desc=Specify the .kfl file(s) containing the known failures.
cnfg.kfl.name=-kfl <file>...
cnfg.kfl.noFiles=no known failures list files specified
cnfg.name=Configuration
cnfg.open.cantFindFile=cannot find file "{0}"
cnfg.open.cantOpenJTE=you cannot specify an environment file in this context: {0}.\nIf your test suite supports the use of environment files, use the "envFiles" command instead.
cnfg.open.cantOpenJTT=you cannot specify a ".jtt" file in this context: {0}.\nA ".jtt" file is a marker file for a (directory containing a) test suite -- if you wish to open the test suite, you should specify the directory instead.
cnfg.open.cantOpenJTX=you cannot specify an exclude list file in this context: {0}.\nIf your test suite supports the use of exclude lists, use the "excludeList" command instead.
cnfg.open.desc=Open a test suite, work directory, configuration (.jti) file or parameter (.jtp) file.
cnfg.open.missingArg=no argument given
cnfg.open.name=-open <file>
cnfg.open.unknownFileType=you cannot specify this type of file in this context: {0}
cnfg.params.badParameterFile=bad parameter file "{0}": {1}
cnfg.params.badValue=bad argument for -params: {0}
cnfg.params.cantFindFile=cannot find file "{0}"
cnfg.params.cantReadFile=cannot read file "{0}": {1}
cnfg.params.conc.desc=Set the maximum number of tests that can be run at once.
cnfg.params.conc.name=-concurrency <value>
cnfg.params.desc=(Deprecated.) Backward compatible way of specifying test execution parameters.  Do not use -params for modern test suites.
cnfg.params.env.desc=Set the name of the environment to be used.
cnfg.params.env.name=-env <name>
cnfg.params.envfile.desc=Specify a .jte file containing the environment used to execute tests. 
cnfg.params.envfile.name=-envFile <file>
cnfg.params.exclude.desc=Specify a .jtx file containing lists of tests to be excluded.
cnfg.params.exclude.name=-exclude <file>
cnfg.params.keywords.desc=Specify a keyword filter to be applied when tests are executed.
cnfg.params.keywords.name=-keywords <expr>
cnfg.params.name=-params <option>... <test>...
cnfg.params.r.desc=Specify a directory in which to write a report at the end of the test run. Equivalent to -report.
cnfg.params.r.name=-r
cnfg.params.report.desc=Specify a directory in which to write a report at the end of the test run. Equivalent to -r.
cnfg.params.report.name=-report
cnfg.params.status.desc=Specify values for a status filer to be applied when tests are executed.
cnfg.params.status.name=-status <status-values>
cnfg.params.t.desc=Specify a test suite to be opened. Equivalent to -testsuite.
cnfg.params.t.name=-t <test-suite>
cnfg.params.testSuite.desc=Specify a test suite to be opened. Equivalent to -t.
cnfg.params.testSuite.name=-testsuite <test-suite>
cnfg.params.timeout.desc=Specify the timeout factor to be applied when tests are executed.
cnfg.params.timeout.name=-timeoutfactor <value>
cnfg.params.w.desc=Create or open a work directory; equivalent to -workdirectory.
cnfg.params.w.name=-w <work-directory>
cnfg.params.workdir.desc=Create or open a work directory; equivalent to -w.
cnfg.params.workdir.name=-workdir <work-directory>
cnfg.priorStatus.desc=Specify values for a status filer to be applied when tests are executed.
cnfg.priorStatus.name=-priorStatus <status-values>
cnfg.set.cantFindFile=cannot find file "{0}"
cnfg.set.cantReadFile=cannot read file "{0}".\n{1}
cnfg.set.cantSetValue=error setting question "{0}" to "{1}": {2}
cnfg.set.desc=Set the value for a question in the configuration interview.
cnfg.set.insufficientArgs=insufficient arguments
cnfg.set.name=-set <question-tag> <value>
cnfg.set.tagNotFound=Configuration file can not be imported due to question with specified tag "{0}" was not found on path. The path is:{1}
cnfg.status.badArg=unrecognized status value: {0}
cnfg.status.missingArg=no argument given
cnfg.status.noValues=no status values specified
cnfg.status.notEditable=this option is not applicable for this testsuite
#cnfg.testSuiteAlreadySet=test suite has already been set by an earlier command or option, and cannot be changed at this point
cnfg.tests.desc=Specify a test or folder of tests to be executed.
cnfg.tests.name=-tests <test-or-folder>...
cnfg.tests.noTests=no tests specified
cnfg.tests.notEditable=this option is not applicable for this testsuite
cnfg.testsuite.desc=Specify a test suite to be opened.
cnfg.testsuite.name=-testsuite <test-suite>
cnfg.tf.badRange=bad value for "timeoutFactor" command ({0}); it should be between {1} and {2}
cnfg.tf.badValue=bad value for "timeoutFactor" command ({0})
cnfg.tf.missingArg=argument missing for testsuite flag
cnfg.tf.notEditable=timeoutFactor value not editable for this test suite
cnfg.timeoutfactor.desc=Specify the timeout factor to be applied when tests are executed.
cnfg.timeoutfactor.name=-timeoutFactor <value>
cnfg.ts.badArg=Bad argument for testsuite (-ts) command ({0})
cnfg.ts.cantFindTestSuite=cannot find test suite "{0}"
#cnfg.ts.cantOpenTestSuite=cannot open test suite "{0}" ({1}
cnfg.ts.desc=Open a test suite; equivalent to -testsuite.
cnfg.ts.missingArg=File argument for testsuite (-ts or -testsuite) command.
cnfg.ts.name=-ts <test-suite>
cnfg.ts.notATestSuite=File is not a test suite: {0}
cnfg.wd.badArg=Bad argument for workDir command ({0})
#cnfg.wd.cantCreateWorkDir=cannot create work directory {0}: {1}
#cnfg.wd.cantCreateWorkDir_noTestSuite=cannot create work directory {0}: no test suite specified
cnfg.wd.cantFindWorkDir=cannot find work directory "{0}"
#cnfg.wd.cantOpenTestSuiteForWorkDir=an error occurred while setting the work directory ({0})
#cnfg.wd.cantOpenWorkDir=cannot open work directory: {0}
cnfg.wd.cantRemoveWorkDir=cannot remove old work directory: {0}
cnfg.wd.desc=Open a work directory; equivalent to -workdirectory.  -create required if the directory does not exist.  -overwrite removes the contents of the workdir before starting.
#cnfg.wd.incompatibleWorkDir=The work directory is not compatible with the given test suite: {0}
cnfg.wd.missingArg=no argument given
cnfg.wd.name=-wd [-create | -overwrite] <work-directory>
cnfg.wd.notAWorkDirectory=File is not a work directory: {0}
#cnfg.wd.notWorkDir=The specified file is not a work directory ({1}
#cnfg.workDirAlreadySet=the work directory has already been set by an earlier command or option, and cannot be changed at this point
cnfg.workdir.desc=Create or open a work directory; equivalent to -workdirectory.  -create required if the directory does not exist. -overwrite removes the contents of the workdir before starting.
cnfg.workdir.name=-workdir [-create | -overwrite] <work-directory>
cnfg.workdirectory.desc=Create or open a work directory - -create required if the directory does not exist.  -overwrite removes the contents of the workdir before starting.
cnfg.workdirectory.name=-workdirectory [-create | -overwrite] <work-directory>
cnfg.writeConfig.desc=Write the configuration to the specified file, should be .jti.
cnfg.writeConfig.name=-writeConfig <file>
cnfg.writeConfig.cantWrite=Cannot write to the location {0}
cnfg.writeConfig.writeErr=Unable to write file {0} due to error:\n{1}
cnfg.writeConfig.badConfig=Unable to write the configuration to {0} because of an error:\n{1}
cnfg.writeTemplate.cantWriteTemplateRef=Error writing template file reference in work directory: {0}

dt.autoExit.txt=The JT Harness will exit automatically in {0} seconds.\n\nClick OK to exit immediately; or, click Cancel to leave the JT Harness harness open.
dt.cantLoadHist.txt=Error loading saved file:
dt.cantWriteDt.txt=Error writing desktop file:\n   {0}
dt.cantAccessResource=Error loading tool manager list:\n   {0}
dt.confirm.head=OK to {0,choice,0#Close|1#Exit}?
dt.confirm.no.btn=No
dt.confirm.no.mne=N
dt.confirm.no.tip=Click to resume the JT Harness harness
dt.confirm.tail=Do you wish to {0,choice,0#close this window|1#exit the JT Harness harness}?
dt.confirm.title=OK to {0,choice,0#Close|1#Exit}?
dt.confirm.warn2=If you {0,choice,0#close this window|1#exit the JT Harness harness}, any unsaved changes will be lost and any active tasks will be aborted.
dt.confirm.warn3=If you do not wish to {0,choice,0#close this window|1#exit the JT Harness harness}, click "No" below.
dt.confirm.warn=Warning:
dt.confirm.yes.btn=Yes
dt.confirm.yes.mne=Y
dt.confirm.yes.tip=Click to confirm that you wish to {0,choice,0#close the window|1#exit the JT Harness harness}
dt.file.cannotFind.err=Cannot find the selected file ({0})
dt.file.cannotOpen.err=Cannot open the selected file ({0}).\n{1}
dt.file.desc=Operations to open and close test manager windows, and to exit the JT Harness harness
dt.file.exit.mit=Exit
dt.file.exit.mne=X
dt.file.recentwd.menu=Recent Work Directory
dt.file.recentwd.mne=R
dt.file.recentwd.desc=Open a recently used work directory
dt.file.historyX.mit={0} {1}
dt.file.menu=File
dt.file.mne=F
dt.file.prefs.mit=Preferences...
dt.file.prefs.mne=P
dt.logo.icon=images/jtlogo.png
dt.menuBar.desc=Menus for available for use in all JT Harness windows
dt.menuBar.name=Menu Bar
dt.opts.name=Desktop
dt.opts.desc=Options for starting the JT Harness graphical user interface
dt.opts.cleanDesktop.desc=(Old) See -newDesktop
dt.opts.cleanDesktop.name=-cleanDesktop
dt.opts.newDesktop.desc=Create a fresh desktop, ignoring any previously saved desktop
dt.opts.newDesktop.name=-newDesktop
dt.opts.resume.desc=Resume saved desktop state
dt.opts.resume.name=-resume
dt.opts.laf.desc=Use specific LookAndFeel for JavaTest graphical user interface. Currently supported: system, sys, metal, nimbus, default (nimbus)
dt.opts.laf.name=-laf
dt.opts.laf.missingArg=Argument for LookAndField (-laf) command. Currently supported: system, sys, metal, nimbus, default (nimbus)
dt.opts.laf.badArg=Bad argument for LookAndField (-laf) command. Currently supported: system, sys, metal, nimbus, default (nimbus), found: {0}
#dt.prefs.mdi.mne=M
#dt.prefs.mdi.rb=MDI
#dt.prefs.mdi.tip=JT Harness tools are contained within a common frame
dt.prefs.name=Appearance
dt.prefs.saveOnExit.ckb=Save Desktop State on Exit
dt.prefs.saveOnExit.mne=X
dt.prefs.saveOnExit.tip=Save details about desktop and open tools when exiting the JT Harness harness
dt.prefs.restoreOnStart.ckb=Restore Tools State on Start
dt.prefs.restoreOnStart.mne=T
dt.prefs.restoreOnStart.tip=Restore saved details about open tools when restarting the JT Harness harness
#dt.prefs.sdi.mne=S
#dt.prefs.sdi.rb=SDI
#dt.prefs.sdi.tip=JT Harness tools appear as separate windows
dt.prefs.shutdown.bdr=Shutdown
#dt.prefs.style.bdr=Window Style
#dt.prefs.tab.mne=B
#dt.prefs.tab.rb=Tabbed
#dt.prefs.tab.tip=JT Harness tools appear as tabbed panels in a single window
dt.prefs.ttDelay.lbl=Delay: 
dt.prefs.ttDelay.mne=D 
dt.prefs.ttDelay.tip=Delay before showing tooltip
dt.prefs.ttDelay={0,choice,0#No Delay|1#1 Second|1<{0} Seconds}
dt.prefs.ttDuration.forev=Forever
dt.prefs.ttDuration.lbl=Duration:
dt.prefs.ttDuration.mne=U
dt.prefs.ttDuration.sec={0} Seconds
dt.prefs.ttDuration.tip=How long tooltips are displayed
dt.prefs.ttips.bdr=Tooltips
dt.prefs.ttips.ckb=Enabled
dt.prefs.ttips.mne=E
dt.prefs.ttips.name=tooltips toggle
dt.prefs.ttips.tip=Should tooltips be displayed?
dt.tasks.menu=Tools
dt.tasks.mne=T
dt.tasks.desc=Activate new tools.
dt.title.console=JT Harness Console
dt.title.tool.txt=JT Harness: {0}
dt.title.txt=JT Harness
dt.windows.cascade.mit=Cascade
dt.windows.cascade.mne=C
dt.windows.desc=Operations to select and arrange JT Harness windows
dt.windows.menu=Windows
dt.windows.mne=W
dt.windows.noWindows.mit=No Windows
dt.windows.open.desc=Open a Window
dt.windows.open.menu=Open
dt.windows.open.mne=O
dt.windows.tile.mit=Tile
dt.windows.tile.mne=T
dt.windows.toolX.mit={0} {1}

dv.restore.cantRestoreTool=Cannot restore tool "{1}" from saved desktop file.\n\nNote: JT Harness restores the last saved state on start up. To prevent this in the future, go to "File" -> "Preferences" -> "Appearance" and deselect the "Save Desktop State on Exit" feature.
dv.restore.cantRestoreTool.err=Cannot restore tool "{0}" from saved desktop file: {1}\n\nNote: JT Harness restores the last saved state on start up. To prevent this in the future, go to "File" -> "Preferences" -> "Appearance" and deselect the "Save Desktop State on Exit" feature.
dv.restore.noMgr=Cannot find specified manager ({1})
dv.restore.noMgrClass=No manager specified

env.name=Environment
env.desc=Options for adding values into JT Harness environments
env.cantAccessSysProps=cannot access system properties: {0}
env.EnameVar.desc=Include <name>=<value> in test execution environments
env.EnameVar.name=-E<name>=<value>
env.EsysProps.desc=Include all system properties in test execution environments
env.EsysProps.name=-EsysProps
env.def.cmdLine=(command line)
env.def.sysProps=(system properties)

fh.cantRead=Can''t read {0}.\n{1}
fh.cantWrite=Can''t write {0}.\n{1}
fh.empty=(no previous files)

#help.cmd.ftBody=    <test-suite>, <work-directory>, <config-file>
#help.cmd.ftHead=\nThe types of file that are recognized are:
#help.cmd.optHead=\nThe available options are:

help.cmd.files.desc=Types of files accepted as command line arguments
help.cmd.files.jti.desc=A JT Harness configuration file
help.cmd.files.jti.name=<config-file>
help.cmd.files.name=Files
help.cmd.files.ts.desc=A JT Harness test suite
help.cmd.files.ts.name=<test-suite>
help.cmd.files.wd.desc=A directory containing the results of a JT Harness test run
help.cmd.files.wd.name=<work-dir>
help.cmd.fullHead=
help.cmd.introHead=For brief details about a topic, use "-help <term> ...". The argument <term> is a command option or other word related to the topic. Use "-help all" to show all of the help entries.\n\nInformation is available for the following topics.\n
help.cmd.noEntriesFound=No entries were found that matched your query.
help.cmd.opts.desc=Options for help and version information
help.cmd.opts.help.desc=Show command line help; same as -usage
help.cmd.opts.help.name=-help [<word>...]
help.cmd.opts.name=Help and Version Information
help.cmd.opts.onlineHelp.desc=Show the online help. You can also show the online help from the desktop Help menu.
help.cmd.opts.onlineHelp.name=-onlineHelp <keyword>...
help.cmd.opts.query1.desc=Show command line help; same as -help
help.cmd.opts.query1.name=-? [<word>...]
help.cmd.opts.query2.desc=Show command line help; same as -help
help.cmd.opts.query2.name=/? [<word>...]
help.cmd.opts.usage.desc=Show command line help; same as -help
help.cmd.opts.usage.name=-usage [<word>...]
help.cmd.opts.version.desc=Show the version of the JT Harness harness being run
help.cmd.opts.version.name=-version
help.cmd.proto=Usage:\n\t{0} options... files...
help.cmd.summaryHead=Information is available for the following topics:
help.cmd.syntax.atfile.desc=Read commands from a file. (Also see "-read".)
help.cmd.syntax.atfile.name=@<file>
help.cmd.syntax.desc=Brief details about the format of the JT Harness command line
help.cmd.syntax.encode.desc=If you set the JVM system property "javatest.command.urlEncoded" to "true", the arguments on the command line will be treated as though have have been encoded in the "application/x-www-form-urlencoded" MIME format. This can be a convenient way to specify arguments which contain non-printable characters, or other characters not easily supported by the command shell.
help.cmd.syntax.encode.name=url-style encoding
help.cmd.syntax.name=Syntax
help.cmd.syntax.opts.desc=Commands can be given as "options" on the command line by preceding the command name with "-".
help.cmd.syntax.opts.name=options
help.cmd.syntax.readfile.desc=Read commands from a file.
help.cmd.syntax.readfile.name=-read <file>
help.cmd.syntax.string.desc=One or more commands can be put directly on the command line by enclosing them in quotation marks.
help.cmd.syntax.string.name=command string
help.cmd.tail=For complete details and examples, see the JT Harness online help. You can access this directly from the command line with "-onlineHelp <word>...", or you can start the JT Harness harness and use the Help menu. The online help is also available in PDF format in the JT Harness documentation directory.
help.copyright.txt=Copyright \u00a9 2005, 2021, Oracle and/or its affiliates. All rights reserved.
help.onlineHelp.pleaseWait=Opening online help; please wait...
help.version.txt={0}, version {1} {2} {3} ({4}, {5})\nInstalled in {6}\nRunning on platform version {7} from {8}.\nBuilt with {9} on {10}.
help.harnessType.full.txt=(Full)
help.harnessType.lite.txt=Lite Harness, Classpath Mode
help.version.unknown=(unknown)

hm.about.ok.btn=OK
hm.about.ok.tip=Dismiss this dialog
hm.aboutBadDate=unknown
hm.aboutJava.mit=About the Java Virtual Machine
hm.aboutJava.mne=B
hm.aboutJava.text.desc=JVM version, location, etc...
hm.aboutJava.text.name=JVM info field
hm.aboutJava.desc=Dialog which shows current Java(TM) Virtual Machine information
hm.aboutJava.name=JVM info dialog
hm.aboutJava=Java(TM) {0}\n{1}\n{2}\n{3}
hm.aboutJavaTest.mit=About the JT Harness
hm.aboutJavaTest.mne=A
hm.aboutJavaTest={0} {1} {2} {3}\n{4}\n\nbuilt with {5}\nbuilt on {6}\n
hm.aboutJavaTest.copy.txt=Copyright \u00a9 2005, 2021, Oracle and/or its affiliates. All rights reserved.\nDO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n\nThis code is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License version 2 only, as published by the Free Software Foundation.  Oracle designates this particular file as subject to the "Classpath" exception as provided by Oracle in the LICENSE file that accompanied this code.\n\nThis code is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License version 2 for more details (a copy is included in the LICENSE file that accompanied this code).\n\nYou should have received a copy of the GNU General Public License version 2 along with this work; if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n\n Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA or visit www.oracle.com if you need additional information or have any questions.
hm.aboutJavaTest.copy.desc=Long version of software copyright notice - multiple paragraphs.
hm.aboutJavaTest.copy.name=Long copyright notice.
hm.aboutJavaTest.text.desc=Build date, author, version, jar file name, copyright info.
hm.aboutJavaTest.text.name=Info field about JT Harness
hm.aboutJavaTest.desc=JT Harness info dialog
hm.aboutJavaTest.name=Dialog which shows build, author and copyright info about the harness.
hm.cantLoadDocs=Warning: cannot load docs for "{0}": {1}
hm.desc=Menu of actions to get help and other information about the JT Harness harness and test suites
hm.help.mit=Online Help
hm.help.mne=H
hm.menu=Help
hm.mne=H

#i18n.passed.clr=#00ff00
#i18n.failed.clr=#ff0000
#i18n.error.clr=#3f3fff
i18n.passed.clr=#6fb32d
i18n.failed.clr=#c91314
i18n.error.clr=#7253e6
i18n.notRun.clr=#ffffff
i18n.filtered.clr=#777777
i18n.unknown=unknown
i18n.status0=Passed.
i18n.status1=Failed.
i18n.status2=Error.
i18n.status3=Not Run.
i18n.status4=Filtered Out

http.name=HTTP server
http.desc=Options for the JT Harness HTTP server
http.startHttp.name=-startHttp
http.startHttp.desc=Start the internal HTTP server

list.add.btn=Add
list.add.tip=Add a new entry to the list
list.add.mne=A
list.add.txt=Specify entry to add to the list
list.add.select.txt=Select
list.change.txt=Change an entry in the list
list.desc=An editable list of items
list.name=List Of Items
list.duplicate.text="{0}" is already in the list.
list.duplicate.title=Duplicate
list.remove.btn=Remove
list.remove.tip=Remove an entry from the list
list.remove.mne=R
list.up.btn=Move Up
list.up.tip=Move an entry up in the list
list.up.mne=U
list.down.btn=Move Down
list.down.tip=Move an entry down in the list
list.down.mne=W

logm.help.name=Logging
logm.help.desc=Support for logging details during execution
logm.help.log.name=-log <file>
logm.help.log.desc=Write logging output to the specified file
logm.log.cantOpenFile=Cannot open log file: {0}
logm.log.missingArg=no argument given

main.cannotExit.err=Cannot exit.
main.cantAccessResource=Error accessing system resource {0}: {1}
main.cantGetConfig=Error getting configuration: {0}

mdi.main.desc=Main JT Harness window, containing tools in MDI mode
mdi.main.name=Main JT Harness Window
mdi.desk.desc=Desktop for the JT Harness tools
mdi.desk.name=Desktop

ml.cantAccessClass=Cannot access class {0} (specified in {1})
ml.cantCreateClass=Cannot instantiate class {0} (specified in {1})
ml.cantFindClass=Cannot find class {0} (specified in {1})
ml.cantFindConstr=Cannot find appropriate constructor for class {0} (specified in {1})
ml.cantRead=Error occurred while reading {0}\n{1}
ml.notSubtype=Class {0} is not an instance of {1} (specified in {2})

prefs.badPref.title=Invalid Preference Value
prefs.cancel.tip=Restore the current settings, reverting any changes not yet applied and close the window
prefs.cannotSave=Warning: cannot save preferences.\n{0}
prefs.desc=Window containing user preferences for the JT Harness harness
prefs.help.btn=Help
prefs.help.mne=H
prefs.help.tip=Show the online help for this window
prefs.ok.btn=OK
prefs.ok.mne=O
prefs.ok.tip=Apply the changes made so far and close this window
prefs.title=JT Harness Preferences
prefs.tree.desc=tree of preference categories
prefs.tree.name=preference tree

sdi.file.close.act=Close
sdi.file.close.mne=C
sdi.file.close.tip=Close this window
sdi.console.desc=JT Harness console window, to control tool windows in SDI mode
sdi.console.name=JT Harness Console Window
sdi.tool.desc=JT Harness Tool Window
sdi.tool.name=JT Harness Tool Window

startup.icon=com/sun/javatest/tool/images/splash.gif
#startup.dummy.desc=Dummy parent frame for splash screen
#startup.dummy.name=Dummy Frame
startup.splash.desc=Splash screen for the JT Harness harness, version 4.1.3
startup.splash.name=Splash Screen

tdi.file.close.act=Close
tdi.file.close.mne=C
tdi.file.close.tip=Close the currently selected tool
tdi.main.desc=Main JT Harness window, containing tools in tab mode
tdi.desk.name=Desktop
tdi.desk.tip=Desktop for the JT Harness tools
tdi.main.name=Main JT Harness Window

tsc.cantFindTestSuite.err=Cannot find the specified test suite: {0}
tsc.ft=Test Suite
tsc.notATestSuite.err=The file or directory you specified is not a valid test suite. The following error occurred when trying to open it:\n{0}
tsc.unableToOpen.err=JavaTest Harness is unable to open the specified test suite.\n\n{0}
tsc.open.btn=Open
tsc.open.tip=Open the selected test suite
tsc.open.mne=O
tsc.title=Open Test Suite

tsp.tree.desc=allows user to select one or more items in a tree
tsp.tree.name=tree selection widget

uif.cancel.btn=Cancel
uif.cancel.mne=C
uif.cancel.tip=Dismiss this dialog without taking any action
uif.error={0}: Error
uif.message.desc=Message giving details for the user
uif.message.name=Message Area
uif.no.btn=No
uif.no.mne=N
uif.no.tip=Respond "No" to the question
uif.ok.btn=OK
uif.ok.mne=O
uif.ok.tip=Acknowledge this message
uif.sp.hor.desc=area with left and right sides, separated by a adjustable divider
uif.sp.hor.name=panel with horizontal split
uif.sp.vert.desc=area with a top and bottom, separated by a adjustable divider
uif.sp.vert.name=panel with vertical split
uif.yes.btn=Yes
uif.yes.mne=Y
uif.yes.tip=Respond "Yes" to the question

verb.badOpt=Invalid verbose option: {0}
verb.badOpts=Invalid option syntax for the verbose flag.
verb.max.desc=Provide maximum details, overriding the settings of individual verbose options
verb.max.name=max
verb.noOpts=Verboseness options missing, empty list not permitted.
verb.quiet.desc=Suppress all details, overriding the settings of individual verbose options
verb.quiet.name=quiet
verb.name=-verbose[:<option>,<option>,...]
verb.desc=Control verbosity during execution.

wdc.cantConvert.err=Cannot convert the selected directory:\n{0}
wdc.cantCreate.err=Cannot create the specified work directory:\n{0}
wdc.cantFindDir.err=Cannot find the specified directory:\n{0}
wdc.cantOpen.err=Cannot open the selected work directory:\n{0}
wdc.existsNotWorkDir_convert.title=Convert work directory?
wdc.existsNotWorkDir_convert.txt=The directory you specified exists, but it is not a work directory. Do you wish to convert it?
wdc.exists_openIt.title=Open Work Directory?
wdc.exists_openIt.txt=The directory you specified already exists; do you wish to open it instead?
wdc.ft=Work Directory
wdc.new.btn=Create
wdc.new.tip=Create a new work directory
wdc.new.title=Create Work Directory
wdc.new.mne=R
wdc.notADir.err=The specified file is not a directory:\n{0}
wdc.notFound_createIt.title=Create Work Directory?
wdc.notFound_createIt.txt=The directory you specified does not exist. Do you wish to create a new work directory for the current test suite, {0}?
wdc.notFound_noTestSuite.err=The directory you specified does not exist, and you have not yet selected a test suite. If you wish to create a new work directory, you must open a test suite first; otherwise, please specify an existing work directory to open.
wdc.open.btn=Open
wdc.open.tip=Open an existing work directory
wdc.open.title=Open Work Directory
wdc.open.mne=O
wdc.tsError_specifyNew.title=Specify Test Suite?
wdc.tsError_specifyNew.txt=An error occurred while opening the test suite for the work directory you specified. The error was:\n{0}\n\nDo you wish to specify a different path for the test suite?
wdc.tsError_specifyTemplate.title=Specify Template?
wdc.tsError_specifyTemplate.txt=An error occurred while opening the template for the work directory you specified. The error was:\n{0}\n\nDo you wish to specify a different template?
wdc.wrongTS.err=The work directory you specified was created for use with another test suite. Please select a different choice.
ce.jtmFiles=Configuration Templates (*.jtm)

colorprefs.name=Color Preferences
colorprefs.inputcolors.bdr=Input Fields Colors
colorprefs.colors.input.invalid.lbl=Invalid Input Color:
colorprefs.colors.input.invalid.cctitle=Choose Invalid Input Color
colorprefs.colors.input.invalid.defvalue=-65536
colorprefs.colors.input.valid.lbl=Valid Input Color:
colorprefs.colors.input.valid.cctitle=Choose Valid Input Color
colorprefs.colors.input.valid.defvalue=-16711936
colorprefs.colors.input.default.lbl=Default Input Color:
colorprefs.colors.input.default.cctitle=Choose Default Input Color
colorprefs.colors.input.default.defvalue=-1
colorprefs.setdefaults.btn=Restore Defaults
colorprefs.setdefaults.mne=D
colorprefs.setdefaults.tip=Restore factory defaults for the color settings.
